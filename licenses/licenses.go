package licenses

import "regexp"

// License represents license information
type License struct {
	Name            string
	Identifier      string
	ShortIdentifier string
	OSIApproved     bool
	Regex           *regexp.Regexp
}

var Licenses []License

// LoadLicenses downloads license data
func LoadLicenses() {
	Licenses = []License{
		{
			Name:            "3dfx Glide License",
			Identifier:      "Glide",
			ShortIdentifier: "Glide",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Glide|3dfx(.)Glide(.)License`),
		},
		{
			Name:            "Abstyles License",
			Identifier:      "Abstyles",
			ShortIdentifier: "Abstyles",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Abstyles|Abstyles(.)License`),
		},
		{
			Name:            "Academic Free License v1.1",
			Identifier:      "AFL-1.1",
			ShortIdentifier: "AFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AFL-1.1|Academic(.)Free(.)License(.)v1.1`),
		},
		{
			Name:            "Academic Free License v1.2",
			Identifier:      "AFL-1.2",
			ShortIdentifier: "AFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AFL-1.2|Academic(.)Free(.)License(.)v1.2`),
		},
		{
			Name:            "Academic Free License v2.0",
			Identifier:      "AFL-2.0",
			ShortIdentifier: "AFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AFL-2.0|Academic(.)Free(.)License(.)v2.0`),
		},
		{
			Name:            "Academic Free License v2.1",
			Identifier:      "AFL-2.1",
			ShortIdentifier: "AFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AFL-2.1|Academic(.)Free(.)License(.)v2.1`),
		},
		{
			Name:            "Academic Free License v3.0",
			Identifier:      "AFL-3.0",
			ShortIdentifier: "AFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AFL-3.0|Academic(.)Free(.)License(.)v3.0`),
		},
		{
			Name:            "Academy of Motion Picture Arts and Sciences BSD",
			Identifier:      "AMPAS",
			ShortIdentifier: "AMPAS",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`AMPAS|Academy(.)of(.)Motion(.)Picture(.)Arts(.)and(.)Sciences(.)BSD`),
		},
		{
			Name:            "Adaptive Public License 1.0",
			Identifier:      "APL-1.0",
			ShortIdentifier: "APL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`APL-1.0|Adaptive(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "Adobe Glyph List License",
			Identifier:      "Adobe-Glyph",
			ShortIdentifier: "Adobe-Glyph",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Adobe-Glyph|Adobe(.)Glyph(.)List(.)License|Adobe-Glyph`),
		},
		{
			Name:            "Adobe Postscript AFM License",
			Identifier:      "APAFML",
			ShortIdentifier: "APAFML",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`APAFML|Adobe(.)Postscript(.)AFM(.)License`),
		},
		{
			Name:            "Adobe Systems Incorporated Source Code License Agreement",
			Identifier:      "Adobe-2006",
			ShortIdentifier: "Adobe",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Adobe-2006|Adobe(.)Systems(.)Incorporated(.)Source(.)Code(.)License(.)Agreement`),
		},
		{
			Name:            "Affero General Public License v1.0",
			Identifier:      "AGPL-1.0",
			ShortIdentifier: "AGPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`AGPL-1.0|Affero(.)General(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Afmparse License",
			Identifier:      "Afmparse",
			ShortIdentifier: "Afmparse",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Afmparse|Afmparse(.)License`),
		},
		{
			Name:            "Aladdin Free Public License",
			Identifier:      "Aladdin",
			ShortIdentifier: "Aladdin",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Aladdin|Aladdin(.)Free(.)Public(.)License`),
		},
		{
			Name:            "Amazon Digital Services License",
			Identifier:      "ADSL",
			ShortIdentifier: "ADSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ADSL|Amazon(.)Digital(.)Services(.)License`),
		},
		{
			Name:            "AMD's plpa_map.c License",
			Identifier:      "AMDPLPA",
			ShortIdentifier: "AMDPLPA",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`AMDPLPA|AMD's(.)plpa_map.c(.)License`),
		},
		{
			Name:            "ANTLR Software Rights Notice",
			Identifier:      "ANTLR-PD",
			ShortIdentifier: "ANTLR-PD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ANTLR-PD|ANTLR(.)Software(.)Rights(.)Notice|ANTLR-PD`),
		},
		{
			Name:            "Apache License 1.0",
			Identifier:      "Apache-1.0",
			ShortIdentifier: "Apache",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Apache-1.0|Apache(.)License(.)1.0`),
		},
		{
			Name:            "Apache License 1.1",
			Identifier:      "Apache-1.1",
			ShortIdentifier: "Apache",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Apache-1.1|Apache(.)License(.)1.1`),
		},
		{
			Name:            "Apache License 2.0",
			Identifier:      "Apache-2.0",
			ShortIdentifier: "Apache",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Apache-2.0|Apache(.)License(.)2.0`),
		},
		{
			Name:            "Apple MIT License",
			Identifier:      "AML",
			ShortIdentifier: "AML",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`AML|Apple(.)MIT(.)License`),
		},
		{
			Name:            "Apple Public Source License 1.0",
			Identifier:      "APSL-1.0",
			ShortIdentifier: "APSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`APSL-1.0|Apple(.)Public(.)Source(.)License(.)1.0`),
		},
		{
			Name:            "Apple Public Source License 1.1",
			Identifier:      "APSL-1.1",
			ShortIdentifier: "APSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`APSL-1.1|Apple(.)Public(.)Source(.)License(.)1.1`),
		},
		{
			Name:            "Apple Public Source License 1.2",
			Identifier:      "APSL-1.2",
			ShortIdentifier: "APSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`APSL-1.2|Apple(.)Public(.)Source(.)License(.)1.2`),
		},
		{
			Name:            "Apple Public Source License 2.0",
			Identifier:      "APSL-2.0",
			ShortIdentifier: "APSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`APSL-2.0|Apple(.)Public(.)Source(.)License(.)2.0`),
		},
		{
			Name:            "Artistic License 1.0",
			Identifier:      "Artistic-1.0",
			ShortIdentifier: "Artistic",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Artistic-1.0|Artistic(.)License(.)1.0`),
		},
		{
			Name:            "Artistic License 1.0 (Perl)",
			Identifier:      "Artistic-1.0-Perl",
			ShortIdentifier: "Artistic",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Artistic-1.0-Perl|Artistic(.)License(.)1.0(.)(Perl)`),
		},
		{
			Name:            "Artistic License 1.0 w/clause 8",
			Identifier:      "Artistic-1.0-cl8",
			ShortIdentifier: "Artistic",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Artistic-1.0-cl8|Artistic(.)License(.)1.0(.)w\/clause(.)8`),
		},
		{
			Name:            "Artistic License 2.0",
			Identifier:      "Artistic-2.0",
			ShortIdentifier: "Artistic",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Artistic-2.0|Artistic(.)License(.)2.0`),
		},
		{
			Name:            "Attribution Assurance License",
			Identifier:      "AAL",
			ShortIdentifier: "AAL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AAL|Attribution(.)Assurance(.)License`),
		},
		{
			Name:            "Bahyph License",
			Identifier:      "Bahyph",
			ShortIdentifier: "Bahyph",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Bahyph|Bahyph(.)License`),
		},
		{
			Name:            "Barr License",
			Identifier:      "Barr",
			ShortIdentifier: "Barr",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Barr|Barr(.)License`),
		},
		{
			Name:            "Beerware License",
			Identifier:      "Beerware",
			ShortIdentifier: "Beerware",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Beerware|Beerware(.)License`),
		},
		{
			Name:            "BitTorrent Open Source License v1.0",
			Identifier:      "BitTorrent-1.0",
			ShortIdentifier: "BitTorrent",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BitTorrent-1.0|BitTorrent(.)Open(.)Source(.)License(.)v1.0`),
		},
		{
			Name:            "BitTorrent Open Source License v1.1",
			Identifier:      "BitTorrent-1.1",
			ShortIdentifier: "BitTorrent",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BitTorrent-1.1|BitTorrent(.)Open(.)Source(.)License(.)v1.1`),
		},
		{
			Name:            "Boost Software License 1.0",
			Identifier:      "BSL-1.0",
			ShortIdentifier: "BSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`BSL-1.0|Boost(.)Software(.)License(.)1.0`),
		},
		{
			Name:            "Borceux license",
			Identifier:      "Borceux",
			ShortIdentifier: "Borceux",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Borceux|Borceux(.)license`),
		},
		{
			Name:            "BSD 2-clause FreeBSD License",
			Identifier:      "BSD-2-Clause-FreeBSD",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-2-Clause-FreeBSD|BSD(.)2-clause(.)FreeBSD(.)License`),
		},
		{
			Name:            "BSD 2-clause NetBSD License",
			Identifier:      "BSD-2-Clause-NetBSD",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-2-Clause-NetBSD|BSD(.)2-clause(.)NetBSD(.)License`),
		},
		{
			Name:            "BSD 3-clause Clear License",
			Identifier:      "BSD-3-Clause-Clear",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-3-Clause-Clear|BSD(.)3-clause(.)Clear(.)License`),
		},
		{
			Name:            "BSD Protection License",
			Identifier:      "BSD-Protection",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-Protection|BSD(.)Protection(.)License`),
		},
		{
			Name:            "BSD with attribution",
			Identifier:      "BSD-3-Clause-Attribution",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-3-Clause-Attribution|BSD(.)with(.)attribution`),
		},
		{
			Name:            "BSD Zero Clause License",
			Identifier:      "0BSD",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`0BSD|BSD(.)Zero(.)Clause(.)License`),
		},
		{
			Name:            "BSD-4-Clause (University of California-Specific)",
			Identifier:      "BSD-4-Clause-UC",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-4-Clause-UC|BSD-4-Clause(.)(University(.)of(.)California-Specific)`),
		},
		{
			Name:            "bzip2 and libbzip2 License v1.0.5",
			Identifier:      "bzip2-1.0.5",
			ShortIdentifier: "bzip2",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`bzip2-1.0.5|bzip2(.)and(.)libbzip2(.)License(.)v1.0.5`),
		},
		{
			Name:            "bzip2 and libbzip2 License v1.0.6",
			Identifier:      "bzip2-1.0.6",
			ShortIdentifier: "bzip2",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`bzip2-1.0.6|bzip2(.)and(.)libbzip2(.)License(.)v1.0.6`),
		},
		{
			Name:            "Caldera License",
			Identifier:      "Caldera",
			ShortIdentifier: "Caldera",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Caldera|Caldera(.)License`),
		},
		{
			Name:            "CeCILL Free Software License Agreement v1.0",
			Identifier:      "CECILL-1.0",
			ShortIdentifier: "CECILL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CECILL-1.0|CeCILL(.)Free(.)Software(.)License(.)Agreement(.)v1.0`),
		},
		{
			Name:            "CeCILL Free Software License Agreement v1.1",
			Identifier:      "CECILL-1.1",
			ShortIdentifier: "CECILL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CECILL-1.1|CeCILL(.)Free(.)Software(.)License(.)Agreement(.)v1.1`),
		},
		{
			Name:            "CeCILL Free Software License Agreement v2.0",
			Identifier:      "CECILL-2.0",
			ShortIdentifier: "CECILL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CECILL-2.0|CeCILL(.)Free(.)Software(.)License(.)Agreement(.)v2.0`),
		},
		{
			Name:            "CeCILL Free Software License Agreement v2.1",
			Identifier:      "CECILL-2.1",
			ShortIdentifier: "CECILL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CECILL-2.1|CeCILL(.)Free(.)Software(.)License(.)Agreement(.)v2.1`),
		},
		{
			Name:            "CeCILL-B Free Software License Agreement",
			Identifier:      "CECILL-B",
			ShortIdentifier: "CECILL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CECILL-B|CeCILL-B(.)Free(.)Software(.)License(.)Agreement`),
		},
		{
			Name:            "CeCILL-C Free Software License Agreement",
			Identifier:      "CECILL-C",
			ShortIdentifier: "CECILL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CECILL-C|CeCILL-C(.)Free(.)Software(.)License(.)Agreement`),
		},
		{
			Name:            "Clarified Artistic License",
			Identifier:      "ClArtistic",
			ShortIdentifier: "CIArtistic",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ClArtistic|Clarified(.)Artistic(.)License`),
		},
		{
			Name:            "CMU License",
			Identifier:      "MIT-CMU",
			ShortIdentifier: "MIT-CMU",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MIT-CMU|CMU(.)License|MIT-CMU`),
		},
		{
			Name:            "CNRI Jython License",
			Identifier:      "CNRI-Jython",
			ShortIdentifier: "CNRI",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CNRI-Jython|CNRI(.)Jython(.)License`),
		},
		{
			Name:            "CNRI Python License",
			Identifier:      "CNRI-Python",
			ShortIdentifier: "CNRI",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CNRI-Python|CNRI(.)Python(.)License`),
		},
		{
			Name:            "CNRI Python Open Source GPL Compatible License Agreement",
			Identifier:      "CNRI-Python-GPL-Compatible",
			ShortIdentifier: "CNRI",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CNRI-Python-GPL-Compatible|CNRI(.)Python(.)Open(.)Source(.)GPL(.)Compatible(.)License(.)Agreement`),
		},
		{
			Name:            "Code Project Open License 1.02",
			Identifier:      "CPOL-1.02",
			ShortIdentifier: "CPOL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CPOL-1.02|Code(.)Project(.)Open(.)License(.)1.02`),
		},
		{
			Name:            "Common Development and Distribution License 1.0",
			Identifier:      "CDDL-1.0",
			ShortIdentifier: "CDDL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CDDL-1.0|Common(.)Development(.)and(.)Distribution(.)License(.)1.0`),
		},
		{
			Name:            "Common Development and Distribution License 1.1",
			Identifier:      "CDDL-1.1",
			ShortIdentifier: "CDDL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CDDL-1.1|Common(.)Development(.)and(.)Distribution(.)License(.)1.1`),
		},
		{
			Name:            "Common Public Attribution License 1.0",
			Identifier:      "CPAL-1.0",
			ShortIdentifier: "CPAL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CPAL-1.0|Common(.)Public(.)Attribution(.)License(.)1.0`),
		},
		{
			Name:            "Common Public License 1.0",
			Identifier:      "CPL-1.0",
			ShortIdentifier: "CPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CPL-1.0|Common(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "Computer Associates Trusted Open Source License 1.1",
			Identifier:      "CATOSL-1.1",
			ShortIdentifier: "CATOSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CATOSL-1.1|Computer(.)Associates(.)Trusted(.)Open(.)Source(.)License(.)1.1`),
		},
		{
			Name:            "Condor Public License v1.1",
			Identifier:      "Condor-1.1",
			ShortIdentifier: "Condo",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Condor-1.1|Condor(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "Creative Commons Attribution 1.0",
			Identifier:      "CC-BY-1.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-1.0|Creative(.)Commons(.)Attribution(.)1.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution 2.0",
			Identifier:      "CC-BY-2.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-2.0|Creative(.)Commons(.)Attribution(.)2.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution 2.5",
			Identifier:      "CC-BY-2.5",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-2.5|Creative(.)Commons(.)Attribution(.)2.5|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution 3.0",
			Identifier:      "CC-BY-3.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-3.0|Creative(.)Commons(.)Attribution(.)3.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution 4.0",
			Identifier:      "CC-BY-4.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-4.0|Creative(.)Commons(.)Attribution(.)4.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution No Derivatives 1.0",
			Identifier:      "CC-BY-ND-1.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-ND-1.0|Creative(.)Commons(.)Attribution(.)No(.)Derivatives(.)1.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution No Derivatives 2.0",
			Identifier:      "CC-BY-ND-2.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-ND-2.0|Creative(.)Commons(.)Attribution(.)No(.)Derivatives(.)2.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution No Derivatives 2.5",
			Identifier:      "CC-BY-ND-2.5",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-ND-2.5|Creative(.)Commons(.)Attribution(.)No(.)Derivatives(.)2.5|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution No Derivatives 3.0",
			Identifier:      "CC-BY-ND-3.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-ND-3.0|Creative(.)Commons(.)Attribution(.)No(.)Derivatives(.)3.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution No Derivatives 4.0",
			Identifier:      "CC-BY-ND-4.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-ND-4.0|Creative(.)Commons(.)Attribution(.)No(.)Derivatives(.)4.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial 1.0",
			Identifier:      "CC-BY-NC-1.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-1.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)1.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial 2.0",
			Identifier:      "CC-BY-NC-2.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-2.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)2.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial 2.5",
			Identifier:      "CC-BY-NC-2.5",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-2.5|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)2.5|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial 3.0",
			Identifier:      "CC-BY-NC-3.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-3.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)3.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial 4.0",
			Identifier:      "CC-BY-NC-4.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-4.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)4.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial No Derivatives 1.0",
			Identifier:      "CC-BY-NC-ND-1.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-ND-1.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)No(.)Derivatives(.)1.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial No Derivatives 2.0",
			Identifier:      "CC-BY-NC-ND-2.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-ND-2.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)No(.)Derivatives(.)2.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial No Derivatives 2.5",
			Identifier:      "CC-BY-NC-ND-2.5",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-ND-2.5|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)No(.)Derivatives(.)2.5|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial No Derivatives 3.0",
			Identifier:      "CC-BY-NC-ND-3.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-ND-3.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)No(.)Derivatives(.)3.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial No Derivatives 4.0",
			Identifier:      "CC-BY-NC-ND-4.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-ND-4.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)No(.)Derivatives(.)4.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial Share Alike 1.0",
			Identifier:      "CC-BY-NC-SA-1.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-SA-1.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)Share(.)Alike(.)1.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial Share Alike 2.0",
			Identifier:      "CC-BY-NC-SA-2.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-SA-2.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)Share(.)Alike(.)2.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial Share Alike 2.5",
			Identifier:      "CC-BY-NC-SA-2.5",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-SA-2.5|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)Share(.)Alike(.)2.5|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial Share Alike 3.0",
			Identifier:      "CC-BY-NC-SA-3.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-SA-3.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)Share(.)Alike(.)3.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Non Commercial Share Alike 4.0",
			Identifier:      "CC-BY-NC-SA-4.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-NC-SA-4.0|Creative(.)Commons(.)Attribution(.)Non(.)Commercial(.)Share(.)Alike(.)4.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Share Alike 1.0",
			Identifier:      "CC-BY-SA-1.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-SA-1.0|Creative(.)Commons(.)Attribution(.)Share(.)Alike(.)1.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Share Alike 2.0",
			Identifier:      "CC-BY-SA-2.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-SA-2.0|Creative(.)Commons(.)Attribution(.)Share(.)Alike(.)2.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Share Alike 2.5",
			Identifier:      "CC-BY-SA-2.5",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-SA-2.5|Creative(.)Commons(.)Attribution(.)Share(.)Alike(.)2.5|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Share Alike 3.0",
			Identifier:      "CC-BY-SA-3.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-SA-3.0|Creative(.)Commons(.)Attribution(.)Share(.)Alike(.)3.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Attribution Share Alike 4.0",
			Identifier:      "CC-BY-SA-4.0",
			ShortIdentifier: "CC-BY",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC-BY-SA-4.0|Creative(.)Commons(.)Attribution(.)Share(.)Alike(.)4.0|CC-BY`),
		},
		{
			Name:            "Creative Commons Zero v1.0 Universal",
			Identifier:      "CC0-1.0",
			ShortIdentifier: "CC0",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CC0-1.0|Creative(.)Commons(.)Zero(.)v1.0(.)Universal`),
		},
		{
			Name:            "Crossword License",
			Identifier:      "Crossword",
			ShortIdentifier: "Crossword",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Crossword|Crossword(.)License`),
		},
		{
			Name:            "CrystalStacker License",
			Identifier:      "CrystalStacker",
			ShortIdentifier: "CrystalStacker",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`CrystalStacker|CrystalStacker(.)License`),
		},
		{
			Name:            "CUA Office Public License v1.0",
			Identifier:      "CUA-OPL-1.0",
			ShortIdentifier: "CUA-OPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`CUA-OPL-1.0|CUA(.)Office(.)Public(.)License(.)v1.0|CUA-OPL`),
		},
		{
			Name:            "Cube License",
			Identifier:      "Cube",
			ShortIdentifier: "Cube",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Cube|Cube(.)License`),
		},
		{
			Name:            "curl License",
			Identifier:      "curl",
			ShortIdentifier: "curl",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`curl|curl(.)License`),
		},
		{
			Name:            "Deutsche Freie Software Lizenz",
			Identifier:      "D-FSL-1.0",
			ShortIdentifier: "D-FSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`D-FSL-1.0|Deutsche(.)Freie(.)Software(.)Lizenz|D-FSL`),
		},
		{
			Name:            "diffmark license",
			Identifier:      "diffmark",
			ShortIdentifier: "diffmark",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`diffmark|diffmark(.)license`),
		},
		{
			Name:            "Do What The F*ck You Want To Public License",
			Identifier:      "WTFPL",
			ShortIdentifier: "WTFPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`WTFPL|Do(.)What(.)The(.)F*ck(.)You(.)Want(.)To(.)Public(.)License`),
		},
		{
			Name:            "DOC License",
			Identifier:      "DOC",
			ShortIdentifier: "DOC",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`DOC(.)License`),
		},
		{
			Name:            "Dotseqn License",
			Identifier:      "Dotseqn",
			ShortIdentifier: "Dotseqn",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Dotseqn|Dotseqn(.)License`),
		},
		{
			Name:            "DSDP License",
			Identifier:      "DSDP",
			ShortIdentifier: "DSDP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`DSDP|DSDP(.)License`),
		},
		{
			Name:            "dvipdfm License",
			Identifier:      "dvipdfm",
			ShortIdentifier: "dvipdfm",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`dvipdfm|dvipdfm(.)License`),
		},
		{
			Name:            "Eclipse Public License 1.0",
			Identifier:      "EPL-1.0",
			ShortIdentifier: "EPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`EPL-1.0|Eclipse(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "Educational Community License v1.0",
			Identifier:      "ECL-1.0",
			ShortIdentifier: "ECL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`ECL-1.0|Educational(.)Community(.)License(.)v1.0`),
		},
		{
			Name:            "Educational Community License v2.0",
			Identifier:      "ECL-2.0",
			ShortIdentifier: "ECL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`ECL-2.0|Educational(.)Community(.)License(.)v2.0`),
		},
		{
			Name:            "eGenix.com Public License 1.1.0",
			Identifier:      "eGenix",
			ShortIdentifier: "eGenix",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`eGenix|eGenix.com(.)Public(.)License(.)1.1.0`),
		},
		{
			Name:            "Eiffel Forum License v1.0",
			Identifier:      "EFL-1.0",
			ShortIdentifier: "EFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`EFL-1.0|Eiffel(.)Forum(.)License(.)v1.0`),
		},
		{
			Name:            "Eiffel Forum License v2.0",
			Identifier:      "EFL-2.0",
			ShortIdentifier: "EFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`EFL-2.0|Eiffel(.)Forum(.)License(.)v2.0`),
		},
		{
			Name:            "Enlightenment License (e16)",
			Identifier:      "MIT-advertising",
			ShortIdentifier: "MIT-advertising",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MIT-advertising|Enlightenment(.)License(.)(e16)|MIT-advertising`),
		},
		{
			Name:            "enna License",
			Identifier:      "MIT-enna",
			ShortIdentifier: "MIT-enna",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MIT-enna|enna(.)License|MIT-enna`),
		},
		{
			Name:            "Entessa Public License v1.0",
			Identifier:      "Entessa",
			ShortIdentifier: "Entessa",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Entessa|Entessa(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Erlang Public License v1.1",
			Identifier:      "ErlPL-1.1",
			ShortIdentifier: "ErlPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ErlPL-1.1|Erlang(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "EU DataGrid Software License",
			Identifier:      "EUDatagrid",
			ShortIdentifier: "EUDatagrid",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`EUDatagrid|EU(.)DataGrid(.)Software(.)License`),
		},
		{
			Name:            "European Union Public License 1.0",
			Identifier:      "EUPL-1.0",
			ShortIdentifier: "EUPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`EUPL-1.0|European(.)Union(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "European Union Public License 1.1",
			Identifier:      "EUPL-1.1",
			ShortIdentifier: "EUPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`EUPL-1.1|European(.)Union(.)Public(.)License(.)1.1`),
		},
		{
			Name:            "Eurosym License",
			Identifier:      "Eurosym",
			ShortIdentifier: "Eurosym",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Eurosym|Eurosym(.)License`),
		},
		{
			Name:            "Fair License",
			Identifier:      "Fair",
			ShortIdentifier: "Fair",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Fair|Fair(.)License`),
		},
		{
			Name:            "feh License",
			Identifier:      "MIT-feh",
			ShortIdentifier: "MIT-feh",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MIT-feh|feh(.)License|MIT-feh`),
		},
		{
			Name:            "Frameworx Open License 1.0",
			Identifier:      "Frameworx-1.0",
			ShortIdentifier: "Frameworx",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Frameworx-1.0|Frameworx(.)Open(.)License(.)1.0`),
		},
		{
			Name:            "FreeImage Public License v1.0",
			Identifier:      "FreeImage",
			ShortIdentifier: "FreeImage",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`FreeImage|FreeImage(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Freetype Project License",
			Identifier:      "FTL",
			ShortIdentifier: "FTL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`FTL|Freetype(.)Project(.)License`),
		},
		{
			Name:            "FSF Unlimited License",
			Identifier:      "FSFUL",
			ShortIdentifier: "FSFUL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`FSFUL|FSF(.)Unlimited(.)License`),
		},
		{
			Name:            "FSF Unlimited License (with License Retention)",
			Identifier:      "FSFULLR",
			ShortIdentifier: "FSFULLR",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`FSFULLR|FSF(.)Unlimited(.)License(.)(with(.)License(.)Retention)`),
		},
		{
			Name:            "Giftware License",
			Identifier:      "Giftware",
			ShortIdentifier: "Giftware",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Giftware|Giftware(.)License`),
		},
		{
			Name:            "GL2PS License",
			Identifier:      "GL2PS",
			ShortIdentifier: "GL2PS",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`GL2PS|GL2PS(.)License`),
		},
		{
			Name:            "Glulxe License",
			Identifier:      "Glulxe",
			ShortIdentifier: "Glulxe",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Glulxe|Glulxe(.)License`),
		},
		{
			Name:            "GNU Affero General Public License v3.0",
			Identifier:      "AGPL-3.0",
			ShortIdentifier: "AGPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`AGPL-3.0|GNU(.)Affero(.)General(.)Public(.)License(.)v3.0`),
		},
		{
			Name:            "GNU Free Documentation License v1.1",
			Identifier:      "GFDL-1.1",
			ShortIdentifier: "GFDL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`GFDL-1.1|GNU(.)Free(.)Documentation(.)License(.)v1.1`),
		},
		{
			Name:            "GNU Free Documentation License v1.2",
			Identifier:      "GFDL-1.2",
			ShortIdentifier: "GFDL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`GFDL-1.2|GNU(.)Free(.)Documentation(.)License(.)v1.2`),
		},
		{
			Name:            "GNU Free Documentation License v1.3",
			Identifier:      "GFDL-1.3",
			ShortIdentifier: "GFDL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`GFDL-1.3|GNU(.)Free(.)Documentation(.)License(.)v1.3`),
		},
		{
			Name:            "GNU General Public License v1.0 only",
			Identifier:      "GPL-1.0",
			ShortIdentifier: "GPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`GPL-1.0|GNU(.)General(.)Public(.)License(.)v1.0(.)only`),
		},
		{
			Name:            "GNU General Public License v2.0 only",
			Identifier:      "GPL-2.0",
			ShortIdentifier: "GPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`GPL-2.0|GNU(.)General(.)Public(.)License(.)v2.0(.)only`),
		},
		{
			Name:            "GNU General Public License v3.0 only",
			Identifier:      "GPL-3.0",
			ShortIdentifier: "GPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`GPL-3.0|GNU(.)General(.)Public(.)License(.)v3.0(.)only`),
		},
		{
			Name:            "GNU Lesser General Public License v2.1 only",
			Identifier:      "LGPL-2.1",
			ShortIdentifier: "LGPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`LGPL-2.1|GNU(.)Lesser(.)General(.)Public(.)License(.)v2.1(.)only`),
		},
		{
			Name:            "GNU Lesser General Public License v3.0 only",
			Identifier:      "LGPL-3.0",
			ShortIdentifier: "LGPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`LGPL-3.0|GNU(.)Lesser(.)General(.)Public(.)License(.)v3.0(.)only`),
		},
		{
			Name:            "GNU Library General Public License v2 only",
			Identifier:      "LGPL-2.0",
			ShortIdentifier: "LGPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`LGPL-2.0|GNU(.)Library(.)General(.)Public(.)License(.)v2(.)only`),
		},
		{
			Name:            "gnuplot License",
			Identifier:      "gnuplot",
			ShortIdentifier: "gnuplot",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`gnuplot|gnuplot(.)License`),
		},
		{
			Name:            "gSOAP Public License v1.3b",
			Identifier:      "gSOAP-1.3b",
			ShortIdentifier: "gSOAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`gSOAP-1.3b|gSOAP(.)Public(.)License(.)v1.3b`),
		},
		{
			Name:            "Haskell Language Report License",
			Identifier:      "HaskellReport",
			ShortIdentifier: "HaskellReport",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`HaskellReport|Haskell(.)Language(.)Report(.)License`),
		},
		{
			Name:            "Historic Permission Notice and Disclaimer",
			Identifier:      "HPND",
			ShortIdentifier: "HPND",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`HPND|Historic(.)Permission(.)Notice(.)and(.)Disclaimer`),
		},
		{
			Name:            "IBM PowerPC Initialization and Boot Software",
			Identifier:      "IBM-pibs",
			ShortIdentifier: "IBM-pibs",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`IBM-pibs|IBM(.)PowerPC(.)Initialization(.)and(.)Boot(.)Software|IBM-pibs`),
		},
		{
			Name:            "IBM Public License v1.0",
			Identifier:      "IPL-1.0",
			ShortIdentifier: "IPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`IPL-1.0|IBM(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "ICU License",
			Identifier:      "ICU",
			ShortIdentifier: "ICU",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ICU(.)License`),
		},
		{
			Name:            "ImageMagick License",
			Identifier:      "ImageMagick",
			ShortIdentifier: "ImageMagick",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ImageMagick|ImageMagick(.)License`),
		},
		{
			Name:            "iMatix Standard Function Library Agreement",
			Identifier:      "iMatix",
			ShortIdentifier: "iMatix",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`iMatix|iMatix(.)Standard(.)Function(.)Library(.)Agreement`),
		},
		{
			Name:            "Imlib2 License",
			Identifier:      "Imlib2",
			ShortIdentifier: "Imlib2",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Imlib2|Imlib2(.)License`),
		},
		{
			Name:            "Independent JPEG Group License",
			Identifier:      "IJG",
			ShortIdentifier: "IJG",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`IJG|Independent(.)JPEG(.)Group(.)License`),
		},
		{
			Name:            "Info-ZIP License",
			Identifier:      "Info-ZIP",
			ShortIdentifier: "Info-ZIP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Info-ZIP|Info-ZIP(.)License|Info-ZIP`),
		},
		{
			Name:            "Intel ACPI Software License Agreement",
			Identifier:      "Intel-ACPI",
			ShortIdentifier: "Intel-ACPI",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Intel-ACPI|Intel(.)ACPI(.)Software(.)License(.)Agreement|Intel-ACPI`),
		},
		{
			Name:            "Intel Open Source License",
			Identifier:      "Intel",
			ShortIdentifier: "Intel",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Intel|Intel(.)Open(.)Source(.)License`),
		},
		{
			Name:            "Interbase Public License v1.0",
			Identifier:      "Interbase-1.0",
			ShortIdentifier: "Interbase",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Interbase-1.0|Interbase(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "IPA Font License",
			Identifier:      "IPA",
			ShortIdentifier: "IPA",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`IPA|IPA(.)Font(.)License`),
		},
		{
			Name:            "ISC License",
			Identifier:      "ISC",
			ShortIdentifier: "ISC",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`ISC(.)License`),
		},
		{
			Name:            "JasPer License",
			Identifier:      "JasPer-2.0",
			ShortIdentifier: "JasPer",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`JasPer-2.0|JasPer(.)License`),
		},
		{
			Name:            "JSON License",
			Identifier:      "JSON",
			ShortIdentifier: "JSON",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`JSON(.)License`),
		},
		{
			Name:            "LaTeX Project Public License v1.0",
			Identifier:      "LPPL-1.0",
			ShortIdentifier: "LPPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`LPPL-1.0|LaTeX(.)Project(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "LaTeX Project Public License v1.1",
			Identifier:      "LPPL-1.1",
			ShortIdentifier: "LPPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`LPPL-1.1|LaTeX(.)Project(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "LaTeX Project Public License v1.2",
			Identifier:      "LPPL-1.2",
			ShortIdentifier: "LPPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`LPPL-1.2|LaTeX(.)Project(.)Public(.)License(.)v1.2`),
		},
		{
			Name:            "LaTeX Project Public License v1.3a",
			Identifier:      "LPPL-1.3a",
			ShortIdentifier: "LPPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`LPPL-1.3a|LaTeX(.)Project(.)Public(.)License(.)v1.3a`),
		},
		{
			Name:            "LaTeX Project Public License v1.3c",
			Identifier:      "LPPL-1.3c",
			ShortIdentifier: "LPPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`LPPL-1.3c|LaTeX(.)Project(.)Public(.)License(.)v1.3c`),
		},
		{
			Name:            "Latex2e License",
			Identifier:      "Latex2e",
			ShortIdentifier: "Latex2e",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Latex2e|Latex2e(.)License`),
		},
		{
			Name:            "Lawrence Berkeley National Labs BSD variant license",
			Identifier:      "BSD-3-Clause-LBNL",
			ShortIdentifier: "BSD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`BSD-3-Clause-LBNL|Lawrence(.)Berkeley(.)National(.)Labs(.)BSD(.)variant(.)license`),
		},
		{
			Name:            "Leptonica License",
			Identifier:      "Leptonica",
			ShortIdentifier: "Leptonica",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Leptonica|Leptonica(.)License`),
		},
		{
			Name:            "Lesser General Public License For Linguistic Resources",
			Identifier:      "LGPLLR",
			ShortIdentifier: "LGPLLR",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`LGPLLR|Lesser(.)General(.)Public(.)License(.)For(.)Linguistic(.)Resources`),
		},
		{
			Name:            "libpng License",
			Identifier:      "Libpng",
			ShortIdentifier: "Libpng",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Libpng|libpng(.)License`),
		},
		{
			Name:            "libtiff License",
			Identifier:      "libtiff",
			ShortIdentifier: "libtiff",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`libtiff|libtiff(.)License`),
		},
		{
			Name:            "Lucent Public License v1.02",
			Identifier:      "LPL-1.02",
			ShortIdentifier: "LPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`LPL-1.02|Lucent(.)Public(.)License(.)v1.02`),
		},
		{
			Name:            "Lucent Public License Version 1.0",
			Identifier:      "LPL-1.0",
			ShortIdentifier: "LPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`LPL-1.0|Lucent(.)Public(.)License(.)Version(.)1.0`),
		},
		{
			Name:            "MakeIndex License",
			Identifier:      "MakeIndex",
			ShortIdentifier: "MakeIndex",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MakeIndex|MakeIndex(.)License`),
		},
		{
			Name:            "Matrix Template Library License",
			Identifier:      "MTLL",
			ShortIdentifier: "MTLL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MTLL|Matrix(.)Template(.)Library(.)License`),
		},
		{
			Name:            "Microsoft Public License",
			Identifier:      "MS-PL",
			ShortIdentifier: "MS-PL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MS-PL|Microsoft(.)Public(.)License|MS-PL`),
		},
		{
			Name:            "Microsoft Reciprocal License",
			Identifier:      "MS-RL",
			ShortIdentifier: "MS-RL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MS-RL|Microsoft(.)Reciprocal(.)License|MS-RL`),
		},
		{
			Name:            "MirOS Licence",
			Identifier:      "MirOS",
			ShortIdentifier: "MirOS",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MirOS|MirOS(.)Licence`),
		},
		{
			Name:            "MIT +no-false-attribs license",
			Identifier:      "MITNFA",
			ShortIdentifier: "MITNFA",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`MITNFA|MIT(.)+no-false-attribs(.)license`),
		},
		{
			Name:            "MIT License",
			Identifier:      "MIT",
			ShortIdentifier: "MIT",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MIT(.)License`),
		},
		{
			Name:            "Motosoto License",
			Identifier:      "Motosoto",
			ShortIdentifier: "Motosoto",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Motosoto|Motosoto(.)License`),
		},
		{
			Name:            "Mozilla Public License 1.0",
			Identifier:      "MPL-1.0",
			ShortIdentifier: "MPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MPL-1.0|Mozilla(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "Mozilla Public License 1.1",
			Identifier:      "MPL-1.1",
			ShortIdentifier: "MPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MPL-1.1|Mozilla(.)Public(.)License(.)1.1`),
		},
		{
			Name:            "Mozilla Public License 2.0",
			Identifier:      "MPL-2.0",
			ShortIdentifier: "MPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MPL-2.0|Mozilla(.)Public(.)License(.)2.0`),
		},
		{
			Name:            "Mozilla Public License 2.0 (no copyleft exception)",
			Identifier:      "MPL-2.0-no-copyleft-exception",
			ShortIdentifier: "MPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`MPL-2.0-no-copyleft-exception|Mozilla(.)Public(.)License(.)2.0(.)(no(.)copyleft(.)exception)`),
		},
		{
			Name:            "mpich2 License",
			Identifier:      "mpich2",
			ShortIdentifier: "mpich2",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`mpich2|mpich2(.)License`),
		},
		{
			Name:            "Multics License",
			Identifier:      "Multics",
			ShortIdentifier: "Multics",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Multics|Multics(.)License`),
		},
		{
			Name:            "Mup License",
			Identifier:      "Mup",
			ShortIdentifier: "Mup",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Mup|Mup(.)License`),
		},
		{
			Name:            "NASA Open Source Agreement 1.3",
			Identifier:      "NASA-1.3",
			ShortIdentifier: "NASA",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`NASA-1.3|NASA(.)Open(.)Source(.)Agreement(.)1.3`),
		},
		{
			Name:            "Naumen Public License",
			Identifier:      "Naumen",
			ShortIdentifier: "Naumen",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Naumen|Naumen(.)Public(.)License`),
		},
		{
			Name:            "Net Boolean Public License v1",
			Identifier:      "NBPL-1.0",
			ShortIdentifier: "NBPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NBPL-1.0|Net(.)Boolean(.)Public(.)License(.)v1`),
		},
		{
			Name:            "NetCDF license",
			Identifier:      "NetCDF",
			ShortIdentifier: "NetCDF",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NetCDF|NetCDF(.)license`),
		},
		{
			Name:            "Nethack General Public License",
			Identifier:      "NGPL",
			ShortIdentifier: "NGPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`NGPL|Nethack(.)General(.)Public(.)License`),
		},
		{
			Name:            "Netizen Open Source License",
			Identifier:      "NOSL",
			ShortIdentifier: "NOSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NOSL|Netizen(.)Open(.)Source(.)License`),
		},
		{
			Name:            "Netscape Public License v1.0",
			Identifier:      "NPL-1.0",
			ShortIdentifier: "NPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NPL-1.0|Netscape(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Netscape Public License v1.1",
			Identifier:      "NPL-1.1",
			ShortIdentifier: "NPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NPL-1.1|Netscape(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "Newsletr License",
			Identifier:      "Newsletr",
			ShortIdentifier: "Newsletr",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Newsletr|Newsletr(.)License`),
		},
		{
			Name:            "No Limit Public License",
			Identifier:      "NLPL",
			ShortIdentifier: "NLPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NLPL|No(.)Limit(.)Public(.)License`),
		},
		{
			Name:            "Nokia Open Source License",
			Identifier:      "Nokia",
			ShortIdentifier: "Nokia",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Nokia|Nokia(.)Open(.)Source(.)License`),
		},
		{
			Name:            "Non-Profit Open Software License 3.0",
			Identifier:      "NPOSL-3.0",
			ShortIdentifier: "NPOSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`NPOSL-3.0|Non-Profit(.)Open(.)Software(.)License(.)3.0`),
		},
		{
			Name:            "Noweb License",
			Identifier:      "Noweb",
			ShortIdentifier: "Noweb",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Noweb|Noweb(.)License`),
		},
		{
			Name:            "NRL License",
			Identifier:      "NRL",
			ShortIdentifier: "NRL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`NRL|NRL(.)License`),
		},
		{
			Name:            "NTP License",
			Identifier:      "NTP",
			ShortIdentifier: "NTP",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`NTP|NTP(.)License`),
		},
		{
			Name:            "Nunit License",
			Identifier:      "Nunit",
			ShortIdentifier: "Nunit",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Nunit|Nunit(.)License`),
		},
		{
			Name:            "OCLC Research Public License 2.0",
			Identifier:      "OCLC-2.0",
			ShortIdentifier: "OCLC",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OCLC-2.0|OCLC(.)Research(.)Public(.)License(.)2.0`),
		},
		{
			Name:            "ODC Open Database License v1.0",
			Identifier:      "ODbL-1.0",
			ShortIdentifier: "ODbL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ODbL-1.0|ODC(.)Open(.)Database(.)License(.)v1.0`),
		},
		{
			Name:            "ODC Public Domain Dedication & License 1.0",
			Identifier:      "PDDL-1.0",
			ShortIdentifier: "PDDL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`PDDL-1.0|ODC(.)Public(.)Domain(.)Dedication(.)&(.)License(.)1.0`),
		},
		{
			Name:            "Open CASCADE Technology Public License",
			Identifier:      "OCCT-PL",
			ShortIdentifier: "OCCT-PL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OCCT-PL|Open(.)CASCADE(.)Technology(.)Public(.)License|OCCT-PL`),
		},
		{
			Name:            "Open Group Test Suite License",
			Identifier:      "OGTSL",
			ShortIdentifier: "OGTSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OGTSL|Open(.)Group(.)Test(.)Suite(.)License`),
		},
		{
			Name:            "Open LDAP Public License 2.2.2",
			Identifier:      "OLDAP-2.2.2",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.2.2|Open(.)LDAP(.)Public(.)License(.)2.2.2`),
		},
		{
			Name:            "Open LDAP Public License v1.1",
			Identifier:      "OLDAP-1.1",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-1.1|Open(.)LDAP(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "Open LDAP Public License v1.2",
			Identifier:      "OLDAP-1.2",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-1.2|Open(.)LDAP(.)Public(.)License(.)v1.2`),
		},
		{
			Name:            "Open LDAP Public License v1.3",
			Identifier:      "OLDAP-1.3",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-1.3|Open(.)LDAP(.)Public(.)License(.)v1.3`),
		},
		{
			Name:            "Open LDAP Public License v1.4",
			Identifier:      "OLDAP-1.4",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-1.4|Open(.)LDAP(.)Public(.)License(.)v1.4`),
		},
		{
			Name:            "Open LDAP Public License v2.0 (or possibly 2.0A and 2.0B)",
			Identifier:      "OLDAP-2.0",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.0|Open(.)LDAP(.)Public(.)License(.)v2.0(.)(or(.)possibly(.)2.0A(.)and(.)2.0B)`),
		},
		{
			Name:            "Open LDAP Public License v2.0.1",
			Identifier:      "OLDAP-2.0.1",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.0.1|Open(.)LDAP(.)Public(.)License(.)v2.0.1`),
		},
		{
			Name:            "Open LDAP Public License v2.1",
			Identifier:      "OLDAP-2.1",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.1|Open(.)LDAP(.)Public(.)License(.)v2.1`),
		},
		{
			Name:            "Open LDAP Public License v2.2",
			Identifier:      "OLDAP-2.2",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.2|Open(.)LDAP(.)Public(.)License(.)v2.2`),
		},
		{
			Name:            "Open LDAP Public License v2.2.1",
			Identifier:      "OLDAP-2.2.1",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.2.1|Open(.)LDAP(.)Public(.)License(.)v2.2.1`),
		},
		{
			Name:            "Open LDAP Public License v2.3",
			Identifier:      "OLDAP-2.3",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.3|Open(.)LDAP(.)Public(.)License(.)v2.3`),
		},
		{
			Name:            "Open LDAP Public License v2.4",
			Identifier:      "OLDAP-2.4",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.4|Open(.)LDAP(.)Public(.)License(.)v2.4`),
		},
		{
			Name:            "Open LDAP Public License v2.5",
			Identifier:      "OLDAP-2.5",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.5|Open(.)LDAP(.)Public(.)License(.)v2.5`),
		},
		{
			Name:            "Open LDAP Public License v2.6",
			Identifier:      "OLDAP-2.6",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.6|Open(.)LDAP(.)Public(.)License(.)v2.6`),
		},
		{
			Name:            "Open LDAP Public License v2.7",
			Identifier:      "OLDAP-2.7",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.7|Open(.)LDAP(.)Public(.)License(.)v2.7`),
		},
		{
			Name:            "Open LDAP Public License v2.8",
			Identifier:      "OLDAP-2.8",
			ShortIdentifier: "OLDAP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OLDAP-2.8|Open(.)LDAP(.)Public(.)License(.)v2.8`),
		},
		{
			Name:            "Open Market License",
			Identifier:      "OML",
			ShortIdentifier: "OML",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OML|Open(.)Market(.)License`),
		},
		{
			Name:            "Open Public License v1.0",
			Identifier:      "OPL-1.0",
			ShortIdentifier: "OPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OPL-1.0|Open(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Open Software License 1.0",
			Identifier:      "OSL-1.0",
			ShortIdentifier: "OSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OSL-1.0|Open(.)Software(.)License(.)1.0`),
		},
		{
			Name:            "Open Software License 1.1",
			Identifier:      "OSL-1.1",
			ShortIdentifier: "OSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OSL-1.1|Open(.)Software(.)License(.)1.1`),
		},
		{
			Name:            "Open Software License 2.0",
			Identifier:      "OSL-2.0",
			ShortIdentifier: "OSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OSL-2.0|Open(.)Software(.)License(.)2.0`),
		},
		{
			Name:            "Open Software License 2.1",
			Identifier:      "OSL-2.1",
			ShortIdentifier: "OSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OSL-2.1|Open(.)Software(.)License(.)2.1`),
		},
		{
			Name:            "Open Software License 3.0",
			Identifier:      "OSL-3.0",
			ShortIdentifier: "OSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OSL-3.0|Open(.)Software(.)License(.)3.0`),
		},
		{
			Name:            "OpenSSL License",
			Identifier:      "OpenSSL",
			ShortIdentifier: "OpenSSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OpenSSL|OpenSSL(.)License`),
		},
		{
			Name:            "PHP License v3.0",
			Identifier:      "PHP-3.0",
			ShortIdentifier: "PHP",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`PHP-3.0|PHP(.)License(.)v3.0`),
		},
		{
			Name:            "PHP License v3.01",
			Identifier:      "PHP-3.01",
			ShortIdentifier: "PHP",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`PHP-3.01|PHP(.)License(.)v3.01`),
		},
		{
			Name:            "Plexus Classworlds License",
			Identifier:      "Plexus",
			ShortIdentifier: "Plexus",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Plexus|Plexus(.)Classworlds(.)License`),
		},
		{
			Name:            "PostgreSQL License",
			Identifier:      "PostgreSQL",
			ShortIdentifier: "PostgreSQL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`PostgreSQL|PostgreSQL(.)License`),
		},
		{
			Name:            "psfrag License",
			Identifier:      "psfrag",
			ShortIdentifier: "psfrag",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`psfrag|psfrag(.)License`),
		},
		{
			Name:            "psutils License",
			Identifier:      "psutils",
			ShortIdentifier: "psutils",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`psutils|psutils(.)License`),
		},
		{
			Name:            "Python License 2.0",
			Identifier:      "Python-2.0",
			ShortIdentifier: "Python",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Python-2.0|Python(.)License(.)2.0`),
		},
		{
			Name:            "Q Public License 1.0",
			Identifier:      "QPL-1.0",
			ShortIdentifier: "QPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`QPL-1.0|Q(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "Qhull License",
			Identifier:      "Qhull",
			ShortIdentifier: "Qhull",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Qhull|Qhull(.)License`),
		},
		{
			Name:            "Rdisc License",
			Identifier:      "Rdisc",
			ShortIdentifier: "Rdisc",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Rdisc|Rdisc(.)License`),
		},
		{
			Name:            "RealNetworks Public Source License v1.0",
			Identifier:      "RPSL-1.0",
			ShortIdentifier: "RPSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`RPSL-1.0|RealNetworks(.)Public(.)Source(.)License(.)v1.0`),
		},
		{
			Name:            "Reciprocal Public License 1.1",
			Identifier:      "RPL-1.1",
			ShortIdentifier: "RPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`RPL-1.1|Reciprocal(.)Public(.)License(.)1.1`),
		},
		{
			Name:            "Reciprocal Public License 1.5",
			Identifier:      "RPL-1.5",
			ShortIdentifier: "RPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`RPL-1.5|Reciprocal(.)Public(.)License(.)1.5`),
		},
		{
			Name:            "Red Hat eCos Public License v1.1",
			Identifier:      "RHeCos-1.1",
			ShortIdentifier: "RHeCos",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`RHeCos-1.1|Red(.)Hat(.)eCos(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "Ricoh Source Code Public License",
			Identifier:      "RSCPL",
			ShortIdentifier: "RSCPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`RSCPL|Ricoh(.)Source(.)Code(.)Public(.)License`),
		},
		{
			Name:            "RSA Message-Digest License",
			Identifier:      "RSA-MD",
			ShortIdentifier: "RSA-MD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`RSA-MD|RSA(.)Message-Digest(.)License|RSA-MD`),
		},
		{
			Name:            "Ruby License",
			Identifier:      "Ruby",
			ShortIdentifier: "Ruby",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Ruby|Ruby(.)License`),
		},
		{
			Name:            "Sax Public Domain Notice",
			Identifier:      "SAX-PD",
			ShortIdentifier: "SAX-PD",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SAX-PD|Sax(.)Public(.)Domain(.)Notice|SAX-PD`),
		},
		{
			Name:            "Saxpath License",
			Identifier:      "Saxpath",
			ShortIdentifier: "Saxpath",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Saxpath|Saxpath(.)License`),
		},
		{
			Name:            "SCEA Shared Source License",
			Identifier:      "SCEA",
			ShortIdentifier: "SCEA",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SCEA|SCEA(.)Shared(.)Source(.)License`),
		},
		{
			Name:            "Scheme Widget Library (SWL) Software License Agreement",
			Identifier:      "SWL",
			ShortIdentifier: "SWL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SWL|Scheme(.)Widget(.)Library(.)(SWL)(.)Software(.)License(.)Agreement`),
		},
		{
			Name:            "Sendmail License",
			Identifier:      "Sendmail",
			ShortIdentifier: "Sendmail",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Sendmail|Sendmail(.)License`),
		},
		{
			Name:            "SGI Free Software License B v1.0",
			Identifier:      "SGI-B-1.0",
			ShortIdentifier: "SGI-B",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SGI-B-1.0|SGI(.)Free(.)Software(.)License(.)B(.)v1.0|SGI-B`),
		},
		{
			Name:            "SGI Free Software License B v1.1",
			Identifier:      "SGI-B-1.1",
			ShortIdentifier: "SGI-B",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SGI-B-1.1|SGI(.)Free(.)Software(.)License(.)B(.)v1.1|SGI-B`),
		},
		{
			Name:            "SGI Free Software License B v2.0",
			Identifier:      "SGI-B-2.0",
			ShortIdentifier: "SGI-B",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SGI-B-2.0|SGI(.)Free(.)Software(.)License(.)B(.)v2.0|SGI-B`),
		},
		{
			Name:            "SIL Open Font License 1.0",
			Identifier:      "OFL-1.0",
			ShortIdentifier: "OFL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`OFL-1.0|SIL(.)Open(.)Font(.)License(.)1.0`),
		},
		{
			Name:            "SIL Open Font License 1.1",
			Identifier:      "OFL-1.1",
			ShortIdentifier: "OFL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`OFL-1.1|SIL(.)Open(.)Font(.)License(.)1.1`),
		},
		{
			Name:            "Simple Public License 2.0",
			Identifier:      "SimPL-2.0",
			ShortIdentifier: "SimPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`SimPL-2.0|Simple(.)Public(.)License(.)2.0`),
		},
		{
			Name:            "Sleepycat License",
			Identifier:      "Sleepycat",
			ShortIdentifier: "Sleepycat",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Sleepycat|Sleepycat(.)License`),
		},
		{
			Name:            "SNIA Public License 1.1",
			Identifier:      "SNIA",
			ShortIdentifier: "SNIA",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SNIA|SNIA(.)Public(.)License(.)1.1`),
		},
		{
			Name:            "Spencer License 86",
			Identifier:      "Spencer-86",
			ShortIdentifier: "Spencer",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Spencer-86|Spencer(.)License(.)86`),
		},
		{
			Name:            "Spencer License 94",
			Identifier:      "Spencer-94",
			ShortIdentifier: "Spencer",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Spencer-94|Spencer(.)License(.)94`),
		},
		{
			Name:            "Spencer License 99",
			Identifier:      "Spencer-99",
			ShortIdentifier: "Spencer",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Spencer-99|Spencer(.)License(.)99`),
		},
		{
			Name:            "Standard ML of New Jersey License",
			Identifier:      "SMLNJ",
			ShortIdentifier: "SMLNJ",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SMLNJ|Standard(.)ML(.)of(.)New(.)Jersey(.)License`),
		},
		{
			Name:            "SugarCRM Public License v1.1.3",
			Identifier:      "SugarCRM-1.1.3",
			ShortIdentifier: "SugarCRM",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SugarCRM-1.1.3|SugarCRM(.)Public(.)License(.)v1.1.3`),
		},
		{
			Name:            "Sun Industry Standards Source License v1.1",
			Identifier:      "SISSL",
			ShortIdentifier: "SISSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`SISSL|Sun(.)Industry(.)Standards(.)Source(.)License(.)v1.1`),
		},
		{
			Name:            "Sun Industry Standards Source License v1.2",
			Identifier:      "SISSL-1.2",
			ShortIdentifier: "SISSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`SISSL-1.2|Sun(.)Industry(.)Standards(.)Source(.)License(.)v1.2`),
		},
		{
			Name:            "Sun Public License v1.0",
			Identifier:      "SPL-1.0",
			ShortIdentifier: "SPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`SPL-1.0|Sun(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Sybase Open Watcom Public License 1.0",
			Identifier:      "Watcom-1.0",
			ShortIdentifier: "Watcom",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Watcom-1.0|Sybase(.)Open(.)Watcom(.)Public(.)License(.)1.0`),
		},
		{
			Name:            "TCL/TK License",
			Identifier:      "TCL",
			ShortIdentifier: "TCL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`TCL|TCL\/TK(.)License`),
		},
		{
			Name:            "The Unlicense",
			Identifier:      "Unlicense",
			ShortIdentifier: "Unlicense",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Unlicense|The(.)Unlicense`),
		},
		{
			Name:            "TMate Open Source License",
			Identifier:      "TMate",
			ShortIdentifier: "TMate",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`TMate|TMate(.)Open(.)Source(.)License`),
		},
		{
			Name:            "TORQUE v2.5+ Software License v1.1",
			Identifier:      "TORQUE-1.1",
			ShortIdentifier: "TORQUE",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`TORQUE-1.1|TORQUE(.)v2.5+(.)Software(.)License(.)v1.1`),
		},
		{
			Name:            "Trusster Open Source License",
			Identifier:      "TOSL",
			ShortIdentifier: "TOSL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`TOSL|Trusster(.)Open(.)Source(.)License`),
		},
		{
			Name:            "Unicode Terms of Use",
			Identifier:      "Unicode-TOU",
			ShortIdentifier: "Unicode-TOU",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Unicode-TOU|Unicode(.)Terms(.)of(.)Use|Unicode-TOU`),
		},
		{
			Name:            "Universal Permissive License v1.0",
			Identifier:      "UPL-1.0",
			ShortIdentifier: "UPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`UPL-1.0|Universal(.)Permissive(.)License(.)v1.0`),
		},
		{
			Name:            "University of Illinois/NCSA Open Source License",
			Identifier:      "NCSA",
			ShortIdentifier: "NCSA",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`NCSA|University(.)of(.)Illinois\/NCSA(.)Open(.)Source(.)License`),
		},
		{
			Name:            "Vim License",
			Identifier:      "Vim",
			ShortIdentifier: "Vim",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Vim|Vim(.)License`),
		},
		{
			Name:            "VOSTROM Public License for Open Source",
			Identifier:      "VOSTROM",
			ShortIdentifier: "VOSTROM",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`VOSTROM|VOSTROM(.)Public(.)License(.)for(.)Open(.)Source`),
		},
		{
			Name:            "Vovida Software License v1.0",
			Identifier:      "VSL-1.0",
			ShortIdentifier: "VSL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`VSL-1.0|Vovida(.)Software(.)License(.)v1.0`),
		},
		{
			Name:            "W3C Software Notice and License (1998-07-20)",
			Identifier:      "W3C-19980720",
			ShortIdentifier: "W3C-19980720",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`W3C-19980720|W3C(.)Software(.)Notice(.)and(.)License(.)(1998-07-20)|W3C-19980720`),
		},
		{
			Name:            "W3C Software Notice and License (2002-12-31)",
			Identifier:      "W3C",
			ShortIdentifier: "W3C",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`W3C|W3C(.)Software(.)Notice(.)and(.)License(.)(2002-12-31)`),
		},
		{
			Name:            "Wsuipa License",
			Identifier:      "Wsuipa",
			ShortIdentifier: "Wsuipa",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Wsuipa|Wsuipa(.)License`),
		},
		{
			Name:            "X.Net License",
			Identifier:      "Xnet",
			ShortIdentifier: "Xnet",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Xnet|X.Net(.)License`),
		},
		{
			Name:            "X11 License",
			Identifier:      "X11",
			ShortIdentifier: "X11",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`X11|X11(.)License`),
		},
		{
			Name:            "Xerox License",
			Identifier:      "Xerox",
			ShortIdentifier: "Xerox",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Xerox|Xerox(.)License`),
		},
		{
			Name:            "XFree86 License 1.1",
			Identifier:      "XFree86-1.1",
			ShortIdentifier: "XFree86",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`XFree86-1.1|XFree86(.)License(.)1.1`),
		},
		{
			Name:            "xinetd License",
			Identifier:      "xinetd",
			ShortIdentifier: "xinetd",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`xinetd|xinetd(.)License`),
		},
		{
			Name:            "XPP License",
			Identifier:      "xpp",
			ShortIdentifier: "xpp",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`xpp|XPP(.)License`),
		},
		{
			Name:            "XSkat License",
			Identifier:      "XSkat",
			ShortIdentifier: "XSkat",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`XSkat|XSkat(.)License`),
		},
		{
			Name:            "Yahoo! Public License v1.0",
			Identifier:      "YPL-1.0",
			ShortIdentifier: "YPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`YPL-1.0|Yahoo!(.)Public(.)License(.)v1.0`),
		},
		{
			Name:            "Yahoo! Public License v1.1",
			Identifier:      "YPL-1.1",
			ShortIdentifier: "YPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`YPL-1.1|Yahoo!(.)Public(.)License(.)v1.1`),
		},
		{
			Name:            "Zed License",
			Identifier:      "Zed",
			ShortIdentifier: "Zed",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Zed(.)License`),
		},
		{
			Name:            "Zend License v2.0",
			Identifier:      "Zend-2.0",
			ShortIdentifier: "Zend",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Zend-2.0|Zend(.)License(.)v2.0`),
		},
		{
			Name:            "Zimbra Public License v1.3",
			Identifier:      "Zimbra-1.3",
			ShortIdentifier: "Zimbra",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Zimbra-1.3|Zimbra(.)Public(.)License(.)v1.3`),
		},
		{
			Name:            "Zimbra Public License v1.4",
			Identifier:      "Zimbra-1.4",
			ShortIdentifier: "Zimbra",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`Zimbra-1.4|Zimbra(.)Public(.)License(.)v1.4`),
		},
		{
			Name:            "zlib License",
			Identifier:      "Zlib",
			ShortIdentifier: "Zlib",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`Zlib|zlib(.)License`),
		},
		{
			Name:            "zlib/libpng License with Acknowledgement",
			Identifier:      "zlib-acknowledgement",
			ShortIdentifier: "Zlib",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`zlib-acknowledgement|zlib\/libpng(.)License(.)with(.)Acknowledgement`),
		},
		{
			Name:            "Zope Public License 1.1",
			Identifier:      "ZPL-1.1",
			ShortIdentifier: "ZPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ZPL-1.1|Zope(.)Public(.)License(.)1.1`),
		},
		{
			Name:            "Zope Public License 2.0",
			Identifier:      "ZPL-2.0",
			ShortIdentifier: "ZPL",
			OSIApproved:     true,
			Regex:           regexp.MustCompile(`ZPL-2.0|Zope(.)Public(.)License(.)2.0`),
		},
		{
			Name:            "Zope Public License 2.1",
			Identifier:      "ZPL-2.1",
			ShortIdentifier: "ZPL",
			OSIApproved:     false,
			Regex:           regexp.MustCompile(`ZPL-2.1|Zope(.)Public(.)License(.)2.1`),
		},
	}
}

// IsOSIApproved checks whether the OSI license is approved.
func IsOSIApproved(licenseIdentifier string) bool {
	for _, license := range Licenses {
		if license.Identifier == licenseIdentifier || license.ShortIdentifier == licenseIdentifier {
			return license.OSIApproved
		}
	}
	return false
}
